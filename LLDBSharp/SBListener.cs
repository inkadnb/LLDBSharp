//----------------------------------------------------------------------------
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
//----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;

namespace LLDB
{
    public unsafe partial class Listener : IDisposable
    {
        [StructLayout(LayoutKind.Explicit, Size = 12)]
        public partial struct Internal
        {
            [FieldOffset(8)]
            public global::System.IntPtr m_opaque_ptr;

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb10SBListenerC2Ev")]
            internal static extern void ctor_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb10SBListenerC2EPKc")]
            internal static extern void ctor_1(global::System.IntPtr instance, global::System.IntPtr name);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb10SBListenerC2ERKS0_")]
            internal static extern void cctor_2(global::System.IntPtr instance, global::System.IntPtr rhs);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb10SBListenerD2Ev")]
            internal static extern void dtor_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb10SBListener8AddEventERKNS_7SBEventE")]
            internal static extern void AddEvent_0(global::System.IntPtr instance, global::System.IntPtr @event);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb10SBListener5ClearEv")]
            internal static extern void Clear_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK4lldb10SBListener7IsValidEv")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool IsValid_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb10SBListener27StartListeningForEventClassERNS_10SBDebuggerEPKcj")]
            internal static extern uint StartListeningForEventClass_0(global::System.IntPtr instance, global::System.IntPtr debugger, global::System.IntPtr broadcaster_class, uint event_mask);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb10SBListener26StopListeningForEventClassERNS_10SBDebuggerEPKcj")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool StopListeningForEventClass_0(global::System.IntPtr instance, global::System.IntPtr debugger, global::System.IntPtr broadcaster_class, uint event_mask);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb10SBListener23StartListeningForEventsERKNS_13SBBroadcasterEj")]
            internal static extern uint StartListeningForEvents_0(global::System.IntPtr instance, global::System.IntPtr broadcaster, uint event_mask);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb10SBListener22StopListeningForEventsERKNS_13SBBroadcasterEj")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool StopListeningForEvents_0(global::System.IntPtr instance, global::System.IntPtr broadcaster, uint event_mask);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb10SBListener12WaitForEventEjRNS_7SBEventE")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool WaitForEvent_0(global::System.IntPtr instance, uint num_seconds, global::System.IntPtr @event);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb10SBListener26WaitForEventForBroadcasterEjRKNS_13SBBroadcasterERNS_7SBEventE")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool WaitForEventForBroadcaster_0(global::System.IntPtr instance, uint num_seconds, global::System.IntPtr broadcaster, global::System.IntPtr sb_event);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb10SBListener34WaitForEventForBroadcasterWithTypeEjRKNS_13SBBroadcasterEjRNS_7SBEventE")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool WaitForEventForBroadcasterWithType_0(global::System.IntPtr instance, uint num_seconds, global::System.IntPtr broadcaster, uint event_type_mask, global::System.IntPtr sb_event);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb10SBListener15PeekAtNextEventERNS_7SBEventE")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool PeekAtNextEvent_0(global::System.IntPtr instance, global::System.IntPtr sb_event);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb10SBListener29PeekAtNextEventForBroadcasterERKNS_13SBBroadcasterERNS_7SBEventE")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool PeekAtNextEventForBroadcaster_0(global::System.IntPtr instance, global::System.IntPtr broadcaster, global::System.IntPtr sb_event);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb10SBListener37PeekAtNextEventForBroadcasterWithTypeERKNS_13SBBroadcasterEjRNS_7SBEventE")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool PeekAtNextEventForBroadcasterWithType_0(global::System.IntPtr instance, global::System.IntPtr broadcaster, uint event_type_mask, global::System.IntPtr sb_event);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb10SBListener12GetNextEventERNS_7SBEventE")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool GetNextEvent_0(global::System.IntPtr instance, global::System.IntPtr sb_event);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb10SBListener26GetNextEventForBroadcasterERKNS_13SBBroadcasterERNS_7SBEventE")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool GetNextEventForBroadcaster_0(global::System.IntPtr instance, global::System.IntPtr broadcaster, global::System.IntPtr sb_event);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb10SBListener34GetNextEventForBroadcasterWithTypeERKNS_13SBBroadcasterEjRNS_7SBEventE")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool GetNextEventForBroadcasterWithType_0(global::System.IntPtr instance, global::System.IntPtr broadcaster, uint event_type_mask, global::System.IntPtr sb_event);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb10SBListener20HandleBroadcastEventERKNS_7SBEventE")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool HandleBroadcastEvent_0(global::System.IntPtr instance, global::System.IntPtr @event);
        }

        public global::System.IntPtr __Instance { get; protected set; }
        public static readonly System.Collections.Concurrent.ConcurrentDictionary<IntPtr, Listener> NativeToManagedMap = new System.Collections.Concurrent.ConcurrentDictionary<IntPtr, Listener>();

        private readonly bool __ownsNativeInstance;

        public static Listener __CreateInstance(global::System.IntPtr native)
        {
            return new Listener((Listener.Internal*) native);
        }

        public static Listener __CreateInstance(Listener.Internal native)
        {
            return new Listener(native);
        }

        private static Listener.Internal* __CopyValue(Listener.Internal native)
        {
            var ret = (Listener.Internal*) Marshal.AllocHGlobal(12);
            *ret = native;
            return ret;
        }

        private Listener(Listener.Internal native)
            : this(__CopyValue(native))
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected Listener(Listener.Internal* native, bool isInternalImpl = false)
        {
            __Instance = new global::System.IntPtr(native);
        }

        public Listener()
        {
            __Instance = Marshal.AllocHGlobal(12);
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            Internal.ctor_0(__Instance);
        }

        public Listener(string name)
        {
            __Instance = Marshal.AllocHGlobal(12);
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            var arg0 = Marshal.StringToHGlobalAnsi(name);
            Internal.ctor_1(__Instance, arg0);
            Marshal.FreeHGlobal(arg0);
        }

        public void Dispose()
        {
            Dispose(disposing: true);
        }

        protected virtual void Dispose(bool disposing)
        {
            DestroyNativeInstance(false);
        }

        public virtual void DestroyNativeInstance()
        {
            DestroyNativeInstance(true);
        }

        private void DestroyNativeInstance(bool force)
        {
            LLDB.Listener __dummy;
            NativeToManagedMap.TryRemove(__Instance, out __dummy);
            if (__ownsNativeInstance || force)
                Internal.dtor_0(__Instance);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
        }

        public void AddEvent(LLDB.Event @event)
        {
            var arg0 = ReferenceEquals(@event, null) ? global::System.IntPtr.Zero : @event.__Instance;
            Internal.AddEvent_0(__Instance, arg0);
        }

        public void Clear()
        {
            Internal.Clear_0(__Instance);
        }

        public bool IsValid()
        {
            var __ret = Internal.IsValid_0(__Instance);
            return __ret;
        }

        public uint StartListeningForEventClass(LLDB.Debugger debugger, string broadcaster_class, uint event_mask)
        {
            var arg0 = ReferenceEquals(debugger, null) ? global::System.IntPtr.Zero : debugger.__Instance;
            var arg1 = Marshal.StringToHGlobalAnsi(broadcaster_class);
            var arg2 = event_mask;
            var __ret = Internal.StartListeningForEventClass_0(__Instance, arg0, arg1, arg2);
            Marshal.FreeHGlobal(arg1);
            return __ret;
        }

        public bool StopListeningForEventClass(LLDB.Debugger debugger, string broadcaster_class, uint event_mask)
        {
            var arg0 = ReferenceEquals(debugger, null) ? global::System.IntPtr.Zero : debugger.__Instance;
            var arg1 = Marshal.StringToHGlobalAnsi(broadcaster_class);
            var arg2 = event_mask;
            var __ret = Internal.StopListeningForEventClass_0(__Instance, arg0, arg1, arg2);
            Marshal.FreeHGlobal(arg1);
            return __ret;
        }

        public uint StartListeningForEvents(LLDB.Broadcaster broadcaster, uint event_mask)
        {
            var arg0 = ReferenceEquals(broadcaster, null) ? global::System.IntPtr.Zero : broadcaster.__Instance;
            var arg1 = event_mask;
            var __ret = Internal.StartListeningForEvents_0(__Instance, arg0, arg1);
            return __ret;
        }

        public bool StopListeningForEvents(LLDB.Broadcaster broadcaster, uint event_mask)
        {
            var arg0 = ReferenceEquals(broadcaster, null) ? global::System.IntPtr.Zero : broadcaster.__Instance;
            var arg1 = event_mask;
            var __ret = Internal.StopListeningForEvents_0(__Instance, arg0, arg1);
            return __ret;
        }

        public bool WaitForEvent(uint num_seconds, LLDB.Event @event)
        {
            var arg0 = num_seconds;
            var arg1 = ReferenceEquals(@event, null) ? global::System.IntPtr.Zero : @event.__Instance;
            var __ret = Internal.WaitForEvent_0(__Instance, arg0, arg1);
            return __ret;
        }

        public bool WaitForEventForBroadcaster(uint num_seconds, LLDB.Broadcaster broadcaster, LLDB.Event sb_event)
        {
            var arg0 = num_seconds;
            var arg1 = ReferenceEquals(broadcaster, null) ? global::System.IntPtr.Zero : broadcaster.__Instance;
            var arg2 = ReferenceEquals(sb_event, null) ? global::System.IntPtr.Zero : sb_event.__Instance;
            var __ret = Internal.WaitForEventForBroadcaster_0(__Instance, arg0, arg1, arg2);
            return __ret;
        }

        public bool WaitForEventForBroadcasterWithType(uint num_seconds, LLDB.Broadcaster broadcaster, uint event_type_mask, LLDB.Event sb_event)
        {
            var arg0 = num_seconds;
            var arg1 = ReferenceEquals(broadcaster, null) ? global::System.IntPtr.Zero : broadcaster.__Instance;
            var arg2 = event_type_mask;
            var arg3 = ReferenceEquals(sb_event, null) ? global::System.IntPtr.Zero : sb_event.__Instance;
            var __ret = Internal.WaitForEventForBroadcasterWithType_0(__Instance, arg0, arg1, arg2, arg3);
            return __ret;
        }

        public bool PeekAtNextEvent(LLDB.Event sb_event)
        {
            var arg0 = ReferenceEquals(sb_event, null) ? global::System.IntPtr.Zero : sb_event.__Instance;
            var __ret = Internal.PeekAtNextEvent_0(__Instance, arg0);
            return __ret;
        }

        public bool PeekAtNextEventForBroadcaster(LLDB.Broadcaster broadcaster, LLDB.Event sb_event)
        {
            var arg0 = ReferenceEquals(broadcaster, null) ? global::System.IntPtr.Zero : broadcaster.__Instance;
            var arg1 = ReferenceEquals(sb_event, null) ? global::System.IntPtr.Zero : sb_event.__Instance;
            var __ret = Internal.PeekAtNextEventForBroadcaster_0(__Instance, arg0, arg1);
            return __ret;
        }

        public bool PeekAtNextEventForBroadcasterWithType(LLDB.Broadcaster broadcaster, uint event_type_mask, LLDB.Event sb_event)
        {
            var arg0 = ReferenceEquals(broadcaster, null) ? global::System.IntPtr.Zero : broadcaster.__Instance;
            var arg1 = event_type_mask;
            var arg2 = ReferenceEquals(sb_event, null) ? global::System.IntPtr.Zero : sb_event.__Instance;
            var __ret = Internal.PeekAtNextEventForBroadcasterWithType_0(__Instance, arg0, arg1, arg2);
            return __ret;
        }

        public bool GetNextEvent(LLDB.Event sb_event)
        {
            var arg0 = ReferenceEquals(sb_event, null) ? global::System.IntPtr.Zero : sb_event.__Instance;
            var __ret = Internal.GetNextEvent_0(__Instance, arg0);
            return __ret;
        }

        public bool GetNextEventForBroadcaster(LLDB.Broadcaster broadcaster, LLDB.Event sb_event)
        {
            var arg0 = ReferenceEquals(broadcaster, null) ? global::System.IntPtr.Zero : broadcaster.__Instance;
            var arg1 = ReferenceEquals(sb_event, null) ? global::System.IntPtr.Zero : sb_event.__Instance;
            var __ret = Internal.GetNextEventForBroadcaster_0(__Instance, arg0, arg1);
            return __ret;
        }

        public bool GetNextEventForBroadcasterWithType(LLDB.Broadcaster broadcaster, uint event_type_mask, LLDB.Event sb_event)
        {
            var arg0 = ReferenceEquals(broadcaster, null) ? global::System.IntPtr.Zero : broadcaster.__Instance;
            var arg1 = event_type_mask;
            var arg2 = ReferenceEquals(sb_event, null) ? global::System.IntPtr.Zero : sb_event.__Instance;
            var __ret = Internal.GetNextEventForBroadcasterWithType_0(__Instance, arg0, arg1, arg2);
            return __ret;
        }

        public bool HandleBroadcastEvent(LLDB.Event @event)
        {
            var arg0 = ReferenceEquals(@event, null) ? global::System.IntPtr.Zero : @event.__Instance;
            var __ret = Internal.HandleBroadcastEvent_0(__Instance, arg0);
            return __ret;
        }
    }
}
