//----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
//----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;

namespace LLDB
{
    public unsafe partial class TypeCategory : IDisposable
    {
        [StructLayout(LayoutKind.Explicit, Size = 8)]
        public partial struct Internal
        {
            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="??0SBTypeCategory@lldb@@QAE@XZ")]
            internal static extern global::System.IntPtr ctor_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="??0SBTypeCategory@lldb@@QAE@ABV01@@Z")]
            internal static extern global::System.IntPtr cctor_1(global::System.IntPtr instance, global::System.IntPtr rhs);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="??0SBTypeCategory@lldb@@IAE@PBD@Z")]
            internal static extern global::System.IntPtr ctor_3(global::System.IntPtr instance, global::System.IntPtr _0);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="??1SBTypeCategory@lldb@@QAE@XZ")]
            internal static extern void dtor_0(global::System.IntPtr instance, int delete);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="?IsValid@SBTypeCategory@lldb@@QBE_NXZ")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool IsValid_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="?GetLanguageAtIndex@SBTypeCategory@lldb@@QAE?AW4LanguageType@2@I@Z")]
            internal static extern LLDB.LanguageType GetLanguageAtIndex_0(global::System.IntPtr instance, uint idx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="?AddLanguage@SBTypeCategory@lldb@@QAEXW4LanguageType@2@@Z")]
            internal static extern void AddLanguage_0(global::System.IntPtr instance, LLDB.LanguageType language);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="?GetDescription@SBTypeCategory@lldb@@QAE_NAAVSBStream@2@W4DescriptionLevel@2@@Z")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool GetDescription_0(global::System.IntPtr instance, global::System.IntPtr description, LLDB.DescriptionLevel description_level);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="?GetTypeNameSpecifierForFilterAtIndex@SBTypeCategory@lldb@@QAE?AVSBTypeNameSpecifier@2@I@Z")]
            internal static extern void GetTypeNameSpecifierForFilterAtIndex_0(global::System.IntPtr instance, global::System.IntPtr @return, uint _0);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="?GetTypeNameSpecifierForFormatAtIndex@SBTypeCategory@lldb@@QAE?AVSBTypeNameSpecifier@2@I@Z")]
            internal static extern void GetTypeNameSpecifierForFormatAtIndex_0(global::System.IntPtr instance, global::System.IntPtr @return, uint _0);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="?GetTypeNameSpecifierForSummaryAtIndex@SBTypeCategory@lldb@@QAE?AVSBTypeNameSpecifier@2@I@Z")]
            internal static extern void GetTypeNameSpecifierForSummaryAtIndex_0(global::System.IntPtr instance, global::System.IntPtr @return, uint _0);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="?GetTypeNameSpecifierForSyntheticAtIndex@SBTypeCategory@lldb@@QAE?AVSBTypeNameSpecifier@2@I@Z")]
            internal static extern void GetTypeNameSpecifierForSyntheticAtIndex_0(global::System.IntPtr instance, global::System.IntPtr @return, uint _0);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="?GetFilterForType@SBTypeCategory@lldb@@QAE?AVSBTypeFilter@2@VSBTypeNameSpecifier@2@@Z")]
            internal static extern LLDB.TypeFilter.Internal GetFilterForType_0(global::System.IntPtr instance, LLDB.TypeNameSpecifier.Internal _0);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="?GetFormatForType@SBTypeCategory@lldb@@QAE?AVSBTypeFormat@2@VSBTypeNameSpecifier@2@@Z")]
            internal static extern LLDB.TypeFormat.Internal GetFormatForType_0(global::System.IntPtr instance, LLDB.TypeNameSpecifier.Internal _0);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="?GetSummaryForType@SBTypeCategory@lldb@@QAE?AVSBTypeSummary@2@VSBTypeNameSpecifier@2@@Z")]
            internal static extern LLDB.TypeSummary.Internal GetSummaryForType_0(global::System.IntPtr instance, LLDB.TypeNameSpecifier.Internal _0);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="?GetSyntheticForType@SBTypeCategory@lldb@@QAE?AVSBTypeSynthetic@2@VSBTypeNameSpecifier@2@@Z")]
            internal static extern LLDB.TypeSynthetic.Internal GetSyntheticForType_0(global::System.IntPtr instance, LLDB.TypeNameSpecifier.Internal _0);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="?GetFilterAtIndex@SBTypeCategory@lldb@@QAE?AVSBTypeFilter@2@I@Z")]
            internal static extern void GetFilterAtIndex_0(global::System.IntPtr instance, global::System.IntPtr @return, uint _0);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="?GetFormatAtIndex@SBTypeCategory@lldb@@QAE?AVSBTypeFormat@2@I@Z")]
            internal static extern void GetFormatAtIndex_0(global::System.IntPtr instance, global::System.IntPtr @return, uint _0);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="?GetSummaryAtIndex@SBTypeCategory@lldb@@QAE?AVSBTypeSummary@2@I@Z")]
            internal static extern void GetSummaryAtIndex_0(global::System.IntPtr instance, global::System.IntPtr @return, uint _0);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="?GetSyntheticAtIndex@SBTypeCategory@lldb@@QAE?AVSBTypeSynthetic@2@I@Z")]
            internal static extern void GetSyntheticAtIndex_0(global::System.IntPtr instance, global::System.IntPtr @return, uint _0);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="?AddTypeFormat@SBTypeCategory@lldb@@QAE_NVSBTypeNameSpecifier@2@VSBTypeFormat@2@@Z")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool AddTypeFormat_0(global::System.IntPtr instance, LLDB.TypeNameSpecifier.Internal _0, LLDB.TypeFormat.Internal _1);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="?DeleteTypeFormat@SBTypeCategory@lldb@@QAE_NVSBTypeNameSpecifier@2@@Z")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool DeleteTypeFormat_0(global::System.IntPtr instance, LLDB.TypeNameSpecifier.Internal _0);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="?AddTypeSummary@SBTypeCategory@lldb@@QAE_NVSBTypeNameSpecifier@2@VSBTypeSummary@2@@Z")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool AddTypeSummary_0(global::System.IntPtr instance, LLDB.TypeNameSpecifier.Internal _0, LLDB.TypeSummary.Internal _1);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="?DeleteTypeSummary@SBTypeCategory@lldb@@QAE_NVSBTypeNameSpecifier@2@@Z")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool DeleteTypeSummary_0(global::System.IntPtr instance, LLDB.TypeNameSpecifier.Internal _0);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="?AddTypeFilter@SBTypeCategory@lldb@@QAE_NVSBTypeNameSpecifier@2@VSBTypeFilter@2@@Z")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool AddTypeFilter_0(global::System.IntPtr instance, LLDB.TypeNameSpecifier.Internal _0, LLDB.TypeFilter.Internal _1);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="?DeleteTypeFilter@SBTypeCategory@lldb@@QAE_NVSBTypeNameSpecifier@2@@Z")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool DeleteTypeFilter_0(global::System.IntPtr instance, LLDB.TypeNameSpecifier.Internal _0);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="?AddTypeSynthetic@SBTypeCategory@lldb@@QAE_NVSBTypeNameSpecifier@2@VSBTypeSynthetic@2@@Z")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool AddTypeSynthetic_0(global::System.IntPtr instance, LLDB.TypeNameSpecifier.Internal _0, LLDB.TypeSynthetic.Internal _1);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="?DeleteTypeSynthetic@SBTypeCategory@lldb@@QAE_NVSBTypeNameSpecifier@2@@Z")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool DeleteTypeSynthetic_0(global::System.IntPtr instance, LLDB.TypeNameSpecifier.Internal _0);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="??8SBTypeCategory@lldb@@QAE_NAAV01@@Z")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorEqualEqual_0(global::System.IntPtr instance, global::System.IntPtr rhs);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="??9SBTypeCategory@lldb@@QAE_NAAV01@@Z")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorExclaimEqual_0(global::System.IntPtr instance, global::System.IntPtr rhs);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="?IsDefaultCategory@SBTypeCategory@lldb@@IAE_NXZ")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool IsDefaultCategory_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="?GetEnabled@SBTypeCategory@lldb@@QAE_NXZ")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool GetEnabled_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="?SetEnabled@SBTypeCategory@lldb@@QAEX_N@Z")]
            internal static extern void SetEnabled_0(global::System.IntPtr instance, bool _0);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="?GetName@SBTypeCategory@lldb@@QAEPBDXZ")]
            internal static extern global::System.IntPtr GetName_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="?GetNumLanguages@SBTypeCategory@lldb@@QAEIXZ")]
            internal static extern uint GetNumLanguages_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="?GetNumFormats@SBTypeCategory@lldb@@QAEIXZ")]
            internal static extern uint GetNumFormats_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="?GetNumSummaries@SBTypeCategory@lldb@@QAEIXZ")]
            internal static extern uint GetNumSummaries_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="?GetNumFilters@SBTypeCategory@lldb@@QAEIXZ")]
            internal static extern uint GetNumFilters_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="?GetNumSynthetics@SBTypeCategory@lldb@@QAEIXZ")]
            internal static extern uint GetNumSynthetics_0(global::System.IntPtr instance);
        }

        public global::System.IntPtr __Instance { get; protected set; }

        protected int __PointerAdjustment;
        public static readonly System.Collections.Concurrent.ConcurrentDictionary<IntPtr, TypeCategory> NativeToManagedMap = new System.Collections.Concurrent.ConcurrentDictionary<IntPtr, TypeCategory>();
        protected void*[] __OriginalVTables;

        protected bool __ownsNativeInstance;

        public static TypeCategory __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
        {
            return new TypeCategory(native.ToPointer(), skipVTables);
        }

        public static TypeCategory __CreateInstance(TypeCategory.Internal native, bool skipVTables = false)
        {
            return new TypeCategory(native, skipVTables);
        }

        private static void* __CopyValue(TypeCategory.Internal native)
        {
            var ret = Marshal.AllocHGlobal(8);
            LLDB.TypeCategory.Internal.cctor_1(ret, new global::System.IntPtr(&native));
            return ret.ToPointer();
        }

        private TypeCategory(TypeCategory.Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TypeCategory(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new global::System.IntPtr(native);
        }

        public TypeCategory()
        {
            __Instance = Marshal.AllocHGlobal(8);
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            Internal.ctor_0((__Instance + __PointerAdjustment));
        }

        public TypeCategory(LLDB.TypeCategory rhs)
        {
            __Instance = Marshal.AllocHGlobal(8);
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            if (ReferenceEquals(rhs, null))
                throw new global::System.ArgumentNullException("rhs", "Cannot be null because it is a C++ reference (&).");
            var arg0 = rhs.__Instance;
            Internal.cctor_1((__Instance + __PointerAdjustment), arg0);
        }

        protected TypeCategory(string _0)
        {
            __Instance = Marshal.AllocHGlobal(8);
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            var arg0 = Marshal.StringToHGlobalAnsi(_0);
            Internal.ctor_3((__Instance + __PointerAdjustment), arg0);
            Marshal.FreeHGlobal(arg0);
        }

        public void Dispose()
        {
            Dispose(disposing: true);
        }

        protected virtual void Dispose(bool disposing)
        {
            LLDB.TypeCategory __dummy;
            NativeToManagedMap.TryRemove(__Instance, out __dummy);
            Internal.dtor_0((__Instance + __PointerAdjustment), 0);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
        }

        public bool IsValid()
        {
            var __ret = Internal.IsValid_0((__Instance + __PointerAdjustment));
            return __ret;
        }

        public LLDB.LanguageType GetLanguageAtIndex(uint idx)
        {
            var __ret = Internal.GetLanguageAtIndex_0((__Instance + __PointerAdjustment), idx);
            return __ret;
        }

        public void AddLanguage(LLDB.LanguageType language)
        {
            var arg0 = language;
            Internal.AddLanguage_0((__Instance + __PointerAdjustment), arg0);
        }

        public bool GetDescription(LLDB.Stream description, LLDB.DescriptionLevel description_level)
        {
            if (ReferenceEquals(description, null))
                throw new global::System.ArgumentNullException("description", "Cannot be null because it is a C++ reference (&).");
            var arg0 = description.__Instance;
            var arg1 = description_level;
            var __ret = Internal.GetDescription_0((__Instance + __PointerAdjustment), arg0, arg1);
            return __ret;
        }

        public LLDB.TypeNameSpecifier GetTypeNameSpecifierForFilterAtIndex(uint _0)
        {
            var __ret = new LLDB.TypeNameSpecifier.Internal();
            Internal.GetTypeNameSpecifierForFilterAtIndex_0((__Instance + __PointerAdjustment), new IntPtr(&__ret), _0);
            return LLDB.TypeNameSpecifier.__CreateInstance(__ret);
        }

        public LLDB.TypeNameSpecifier GetTypeNameSpecifierForFormatAtIndex(uint _0)
        {
            var __ret = new LLDB.TypeNameSpecifier.Internal();
            Internal.GetTypeNameSpecifierForFormatAtIndex_0((__Instance + __PointerAdjustment), new IntPtr(&__ret), _0);
            return LLDB.TypeNameSpecifier.__CreateInstance(__ret);
        }

        public LLDB.TypeNameSpecifier GetTypeNameSpecifierForSummaryAtIndex(uint _0)
        {
            var __ret = new LLDB.TypeNameSpecifier.Internal();
            Internal.GetTypeNameSpecifierForSummaryAtIndex_0((__Instance + __PointerAdjustment), new IntPtr(&__ret), _0);
            return LLDB.TypeNameSpecifier.__CreateInstance(__ret);
        }

        public LLDB.TypeNameSpecifier GetTypeNameSpecifierForSyntheticAtIndex(uint _0)
        {
            var __ret = new LLDB.TypeNameSpecifier.Internal();
            Internal.GetTypeNameSpecifierForSyntheticAtIndex_0((__Instance + __PointerAdjustment), new IntPtr(&__ret), _0);
            return LLDB.TypeNameSpecifier.__CreateInstance(__ret);
        }

        public LLDB.TypeFilter GetFilterForType(LLDB.TypeNameSpecifier _0)
        {
            var arg0 = ReferenceEquals(_0, null) ? new LLDB.TypeNameSpecifier.Internal() : *(LLDB.TypeNameSpecifier.Internal*) (_0.__Instance);
            var __ret = Internal.GetFilterForType_0((__Instance + __PointerAdjustment), arg0);
            return LLDB.TypeFilter.__CreateInstance(__ret);
        }

        public LLDB.TypeFormat GetFormatForType(LLDB.TypeNameSpecifier _0)
        {
            var arg0 = ReferenceEquals(_0, null) ? new LLDB.TypeNameSpecifier.Internal() : *(LLDB.TypeNameSpecifier.Internal*) (_0.__Instance);
            var __ret = Internal.GetFormatForType_0((__Instance + __PointerAdjustment), arg0);
            return LLDB.TypeFormat.__CreateInstance(__ret);
        }

        public LLDB.TypeSummary GetSummaryForType(LLDB.TypeNameSpecifier _0)
        {
            var arg0 = ReferenceEquals(_0, null) ? new LLDB.TypeNameSpecifier.Internal() : *(LLDB.TypeNameSpecifier.Internal*) (_0.__Instance);
            var __ret = Internal.GetSummaryForType_0((__Instance + __PointerAdjustment), arg0);
            return LLDB.TypeSummary.__CreateInstance(__ret);
        }

        public LLDB.TypeSynthetic GetSyntheticForType(LLDB.TypeNameSpecifier _0)
        {
            var arg0 = ReferenceEquals(_0, null) ? new LLDB.TypeNameSpecifier.Internal() : *(LLDB.TypeNameSpecifier.Internal*) (_0.__Instance);
            var __ret = Internal.GetSyntheticForType_0((__Instance + __PointerAdjustment), arg0);
            return LLDB.TypeSynthetic.__CreateInstance(__ret);
        }

        public LLDB.TypeFilter GetFilterAtIndex(uint _0)
        {
            var __ret = new LLDB.TypeFilter.Internal();
            Internal.GetFilterAtIndex_0((__Instance + __PointerAdjustment), new IntPtr(&__ret), _0);
            return LLDB.TypeFilter.__CreateInstance(__ret);
        }

        public LLDB.TypeFormat GetFormatAtIndex(uint _0)
        {
            var __ret = new LLDB.TypeFormat.Internal();
            Internal.GetFormatAtIndex_0((__Instance + __PointerAdjustment), new IntPtr(&__ret), _0);
            return LLDB.TypeFormat.__CreateInstance(__ret);
        }

        public LLDB.TypeSummary GetSummaryAtIndex(uint _0)
        {
            var __ret = new LLDB.TypeSummary.Internal();
            Internal.GetSummaryAtIndex_0((__Instance + __PointerAdjustment), new IntPtr(&__ret), _0);
            return LLDB.TypeSummary.__CreateInstance(__ret);
        }

        public LLDB.TypeSynthetic GetSyntheticAtIndex(uint _0)
        {
            var __ret = new LLDB.TypeSynthetic.Internal();
            Internal.GetSyntheticAtIndex_0((__Instance + __PointerAdjustment), new IntPtr(&__ret), _0);
            return LLDB.TypeSynthetic.__CreateInstance(__ret);
        }

        public bool AddTypeFormat(LLDB.TypeNameSpecifier _0, LLDB.TypeFormat _1)
        {
            var arg0 = ReferenceEquals(_0, null) ? new LLDB.TypeNameSpecifier.Internal() : *(LLDB.TypeNameSpecifier.Internal*) (_0.__Instance);
            var arg1 = ReferenceEquals(_1, null) ? new LLDB.TypeFormat.Internal() : *(LLDB.TypeFormat.Internal*) (_1.__Instance);
            var __ret = Internal.AddTypeFormat_0((__Instance + __PointerAdjustment), arg0, arg1);
            return __ret;
        }

        public bool DeleteTypeFormat(LLDB.TypeNameSpecifier _0)
        {
            var arg0 = ReferenceEquals(_0, null) ? new LLDB.TypeNameSpecifier.Internal() : *(LLDB.TypeNameSpecifier.Internal*) (_0.__Instance);
            var __ret = Internal.DeleteTypeFormat_0((__Instance + __PointerAdjustment), arg0);
            return __ret;
        }

        public bool AddTypeSummary(LLDB.TypeNameSpecifier _0, LLDB.TypeSummary _1)
        {
            var arg0 = ReferenceEquals(_0, null) ? new LLDB.TypeNameSpecifier.Internal() : *(LLDB.TypeNameSpecifier.Internal*) (_0.__Instance);
            var arg1 = ReferenceEquals(_1, null) ? new LLDB.TypeSummary.Internal() : *(LLDB.TypeSummary.Internal*) (_1.__Instance);
            var __ret = Internal.AddTypeSummary_0((__Instance + __PointerAdjustment), arg0, arg1);
            return __ret;
        }

        public bool DeleteTypeSummary(LLDB.TypeNameSpecifier _0)
        {
            var arg0 = ReferenceEquals(_0, null) ? new LLDB.TypeNameSpecifier.Internal() : *(LLDB.TypeNameSpecifier.Internal*) (_0.__Instance);
            var __ret = Internal.DeleteTypeSummary_0((__Instance + __PointerAdjustment), arg0);
            return __ret;
        }

        public bool AddTypeFilter(LLDB.TypeNameSpecifier _0, LLDB.TypeFilter _1)
        {
            var arg0 = ReferenceEquals(_0, null) ? new LLDB.TypeNameSpecifier.Internal() : *(LLDB.TypeNameSpecifier.Internal*) (_0.__Instance);
            var arg1 = ReferenceEquals(_1, null) ? new LLDB.TypeFilter.Internal() : *(LLDB.TypeFilter.Internal*) (_1.__Instance);
            var __ret = Internal.AddTypeFilter_0((__Instance + __PointerAdjustment), arg0, arg1);
            return __ret;
        }

        public bool DeleteTypeFilter(LLDB.TypeNameSpecifier _0)
        {
            var arg0 = ReferenceEquals(_0, null) ? new LLDB.TypeNameSpecifier.Internal() : *(LLDB.TypeNameSpecifier.Internal*) (_0.__Instance);
            var __ret = Internal.DeleteTypeFilter_0((__Instance + __PointerAdjustment), arg0);
            return __ret;
        }

        public bool AddTypeSynthetic(LLDB.TypeNameSpecifier _0, LLDB.TypeSynthetic _1)
        {
            var arg0 = ReferenceEquals(_0, null) ? new LLDB.TypeNameSpecifier.Internal() : *(LLDB.TypeNameSpecifier.Internal*) (_0.__Instance);
            var arg1 = ReferenceEquals(_1, null) ? new LLDB.TypeSynthetic.Internal() : *(LLDB.TypeSynthetic.Internal*) (_1.__Instance);
            var __ret = Internal.AddTypeSynthetic_0((__Instance + __PointerAdjustment), arg0, arg1);
            return __ret;
        }

        public bool DeleteTypeSynthetic(LLDB.TypeNameSpecifier _0)
        {
            var arg0 = ReferenceEquals(_0, null) ? new LLDB.TypeNameSpecifier.Internal() : *(LLDB.TypeNameSpecifier.Internal*) (_0.__Instance);
            var __ret = Internal.DeleteTypeSynthetic_0((__Instance + __PointerAdjustment), arg0);
            return __ret;
        }

        public static bool operator ==(LLDB.TypeCategory __op, LLDB.TypeCategory rhs)
        {
            bool __opNull = ReferenceEquals(__op, null);
            bool rhsNull = ReferenceEquals(rhs, null);
            if (__opNull || rhsNull)
                return __opNull && rhsNull;
            var arg0 = __op.__Instance;
            var arg1 = rhs.__Instance;
            var __ret = Internal.OperatorEqualEqual_0(arg0, arg1);
            return __ret;
        }

        public override bool Equals(object obj)
        {
            return this == obj as TypeCategory;
        }

        public override int GetHashCode()
        {
            if (__Instance == global::System.IntPtr.Zero)
                return global::System.IntPtr.Zero.GetHashCode();
            return (*(Internal*) __Instance).GetHashCode();
        }

        public static bool operator !=(LLDB.TypeCategory __op, LLDB.TypeCategory rhs)
        {
            bool __opNull = ReferenceEquals(__op, null);
            bool rhsNull = ReferenceEquals(rhs, null);
            if (__opNull || rhsNull)
                return !(__opNull && rhsNull);
            var arg0 = __op.__Instance;
            var arg1 = rhs.__Instance;
            var __ret = Internal.OperatorExclaimEqual_0(arg0, arg1);
            return __ret;
        }

        protected bool IsDefaultCategory()
        {
            var __ret = Internal.IsDefaultCategory_0((__Instance + __PointerAdjustment));
            return __ret;
        }

        public bool Enabled
        {
            get
            {
                var __ret = Internal.GetEnabled_0((__Instance + __PointerAdjustment));
                return __ret;
            }

            set
            {
                Internal.SetEnabled_0((__Instance + __PointerAdjustment), value);
            }
        }

        public string Name
        {
            get
            {
                var __ret = Internal.GetName_0((__Instance + __PointerAdjustment));
                return Marshal.PtrToStringAnsi(__ret);
            }
        }

        public uint NumLanguages
        {
            get
            {
                var __ret = Internal.GetNumLanguages_0((__Instance + __PointerAdjustment));
                return __ret;
            }
        }

        public uint NumFormats
        {
            get
            {
                var __ret = Internal.GetNumFormats_0((__Instance + __PointerAdjustment));
                return __ret;
            }
        }

        public uint NumSummaries
        {
            get
            {
                var __ret = Internal.GetNumSummaries_0((__Instance + __PointerAdjustment));
                return __ret;
            }
        }

        public uint NumFilters
        {
            get
            {
                var __ret = Internal.GetNumFilters_0((__Instance + __PointerAdjustment));
                return __ret;
            }
        }

        public uint NumSynthetics
        {
            get
            {
                var __ret = Internal.GetNumSynthetics_0((__Instance + __PointerAdjustment));
                return __ret;
            }
        }
    }
}
