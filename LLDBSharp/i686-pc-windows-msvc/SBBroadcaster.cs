//----------------------------------------------------------------------------
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
//----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;

namespace LLDB
{
    public unsafe partial class Broadcaster : IDisposable
    {
        [StructLayout(LayoutKind.Explicit, Size = 12)]
        public partial struct Internal
        {
            [FieldOffset(8)]
            public global::System.IntPtr m_opaque_ptr;

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="??0SBBroadcaster@lldb@@QAE@XZ")]
            internal static extern global::System.IntPtr ctor_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="??0SBBroadcaster@lldb@@QAE@PBD@Z")]
            internal static extern global::System.IntPtr ctor_1(global::System.IntPtr instance, global::System.IntPtr name);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="??0SBBroadcaster@lldb@@QAE@ABV01@@Z")]
            internal static extern global::System.IntPtr cctor_2(global::System.IntPtr instance, global::System.IntPtr rhs);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="??1SBBroadcaster@lldb@@QAE@XZ")]
            internal static extern void dtor_0(global::System.IntPtr instance, int delete);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="?IsValid@SBBroadcaster@lldb@@QBE_NXZ")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool IsValid_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="?Clear@SBBroadcaster@lldb@@QAEXXZ")]
            internal static extern void Clear_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="?BroadcastEventByType@SBBroadcaster@lldb@@QAEXI_N@Z")]
            internal static extern void BroadcastEventByType_0(global::System.IntPtr instance, uint event_type, bool unique);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="?BroadcastEvent@SBBroadcaster@lldb@@QAEXABVSBEvent@2@_N@Z")]
            internal static extern void BroadcastEvent_0(global::System.IntPtr instance, global::System.IntPtr @event, bool unique);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="?AddInitialEventsToListener@SBBroadcaster@lldb@@QAEXABVSBListener@2@I@Z")]
            internal static extern void AddInitialEventsToListener_0(global::System.IntPtr instance, global::System.IntPtr listener, uint requested_events);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="?AddListener@SBBroadcaster@lldb@@QAEIABVSBListener@2@I@Z")]
            internal static extern uint AddListener_0(global::System.IntPtr instance, global::System.IntPtr listener, uint event_mask);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="?EventTypeHasListeners@SBBroadcaster@lldb@@QAE_NI@Z")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool EventTypeHasListeners_0(global::System.IntPtr instance, uint event_type);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="?RemoveListener@SBBroadcaster@lldb@@QAE_NABVSBListener@2@I@Z")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool RemoveListener_0(global::System.IntPtr instance, global::System.IntPtr listener, uint event_mask);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="??8SBBroadcaster@lldb@@QBE_NABV01@@Z")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorEqualEqual_0(global::System.IntPtr instance, global::System.IntPtr rhs);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="??9SBBroadcaster@lldb@@QBE_NABV01@@Z")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorExclaimEqual_0(global::System.IntPtr instance, global::System.IntPtr rhs);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="??MSBBroadcaster@lldb@@QBE_NABV01@@Z")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorLess_0(global::System.IntPtr instance, global::System.IntPtr rhs);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="?GetName@SBBroadcaster@lldb@@QBEPBDXZ")]
            internal static extern global::System.IntPtr GetName_0(global::System.IntPtr instance);
        }

        public global::System.IntPtr __Instance { get; protected set; }
        public static readonly System.Collections.Concurrent.ConcurrentDictionary<IntPtr, Broadcaster> NativeToManagedMap = new System.Collections.Concurrent.ConcurrentDictionary<IntPtr, Broadcaster>();

        private readonly bool __ownsNativeInstance;

        public static Broadcaster __CreateInstance(global::System.IntPtr native)
        {
            return new Broadcaster((Broadcaster.Internal*) native);
        }

        public static Broadcaster __CreateInstance(Broadcaster.Internal native)
        {
            return new Broadcaster(native);
        }

        private static Broadcaster.Internal* __CopyValue(Broadcaster.Internal native)
        {
            var ret = (Broadcaster.Internal*) Marshal.AllocHGlobal(12);
            *ret = native;
            return ret;
        }

        private Broadcaster(Broadcaster.Internal native)
            : this(__CopyValue(native))
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected Broadcaster(Broadcaster.Internal* native, bool isInternalImpl = false)
        {
            __Instance = new global::System.IntPtr(native);
        }

        public Broadcaster()
        {
            __Instance = Marshal.AllocHGlobal(12);
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            Internal.ctor_0(__Instance);
        }

        public Broadcaster(string name)
        {
            __Instance = Marshal.AllocHGlobal(12);
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            var arg0 = Marshal.StringToHGlobalAnsi(name);
            Internal.ctor_1(__Instance, arg0);
            Marshal.FreeHGlobal(arg0);
        }

        public void Dispose()
        {
            Dispose(disposing: true);
        }

        protected virtual void Dispose(bool disposing)
        {
            DestroyNativeInstance(false);
        }

        public virtual void DestroyNativeInstance()
        {
            DestroyNativeInstance(true);
        }

        private void DestroyNativeInstance(bool force)
        {
            LLDB.Broadcaster __dummy;
            NativeToManagedMap.TryRemove(__Instance, out __dummy);
            if (__ownsNativeInstance || force)
                Internal.dtor_0(__Instance, 0);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
        }

        public bool IsValid()
        {
            var __ret = Internal.IsValid_0(__Instance);
            return __ret;
        }

        public void Clear()
        {
            Internal.Clear_0(__Instance);
        }

        public void BroadcastEventByType(uint event_type, bool unique)
        {
            var arg0 = event_type;
            Internal.BroadcastEventByType_0(__Instance, arg0, unique);
        }

        public void BroadcastEvent(LLDB.Event @event, bool unique)
        {
            var arg0 = ReferenceEquals(@event, null) ? global::System.IntPtr.Zero : @event.__Instance;
            Internal.BroadcastEvent_0(__Instance, arg0, unique);
        }

        public void AddInitialEventsToListener(LLDB.Listener listener, uint requested_events)
        {
            var arg0 = ReferenceEquals(listener, null) ? global::System.IntPtr.Zero : listener.__Instance;
            var arg1 = requested_events;
            Internal.AddInitialEventsToListener_0(__Instance, arg0, arg1);
        }

        public uint AddListener(LLDB.Listener listener, uint event_mask)
        {
            var arg0 = ReferenceEquals(listener, null) ? global::System.IntPtr.Zero : listener.__Instance;
            var arg1 = event_mask;
            var __ret = Internal.AddListener_0(__Instance, arg0, arg1);
            return __ret;
        }

        public bool EventTypeHasListeners(uint event_type)
        {
            var arg0 = event_type;
            var __ret = Internal.EventTypeHasListeners_0(__Instance, arg0);
            return __ret;
        }

        public bool RemoveListener(LLDB.Listener listener, uint event_mask)
        {
            var arg0 = ReferenceEquals(listener, null) ? global::System.IntPtr.Zero : listener.__Instance;
            var arg1 = event_mask;
            var __ret = Internal.RemoveListener_0(__Instance, arg0, arg1);
            return __ret;
        }

        public static bool operator ==(LLDB.Broadcaster __op, LLDB.Broadcaster rhs)
        {
            bool __opNull = ReferenceEquals(__op, null);
            bool rhsNull = ReferenceEquals(rhs, null);
            if (__opNull || rhsNull)
                return __opNull && rhsNull;
            var arg0 = __op.__Instance;
            var arg1 = rhs.__Instance;
            var __ret = Internal.OperatorEqualEqual_0(arg0, arg1);
            return __ret;
        }

        public override bool Equals(object obj)
        {
            return this == obj as Broadcaster;
        }

        public static bool operator !=(LLDB.Broadcaster __op, LLDB.Broadcaster rhs)
        {
            var arg0 = ReferenceEquals(__op, null) ? global::System.IntPtr.Zero : __op.__Instance;
            var arg1 = ReferenceEquals(rhs, null) ? global::System.IntPtr.Zero : rhs.__Instance;
            var __ret = Internal.OperatorExclaimEqual_0(arg0, arg1);
            return __ret;
        }

        public static bool operator >(LLDB.Broadcaster __op, LLDB.Broadcaster rhs)
        {
            return !(__op < rhs);
        }

        public static bool operator <(LLDB.Broadcaster __op, LLDB.Broadcaster rhs)
        {
            var arg0 = ReferenceEquals(__op, null) ? global::System.IntPtr.Zero : __op.__Instance;
            var arg1 = ReferenceEquals(rhs, null) ? global::System.IntPtr.Zero : rhs.__Instance;
            var __ret = Internal.OperatorLess_0(arg0, arg1);
            return __ret;
        }

        public string Name
        {
            get
            {
                var __ret = Internal.GetName_0(__Instance);
                return Marshal.PtrToStringAnsi(__ret);
            }
        }
    }
}
