//----------------------------------------------------------------------------
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
//----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;

namespace LLDB
{
    public unsafe partial class TypeSummaryOptions : IDisposable
    {
        [StructLayout(LayoutKind.Explicit, Size = 4)]
        public partial struct Internal
        {
            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb20SBTypeSummaryOptionsC2Ev")]
            internal static extern void ctor_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb20SBTypeSummaryOptionsC2ERKS0_")]
            internal static extern void cctor_1(global::System.IntPtr instance, global::System.IntPtr rhs);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb20SBTypeSummaryOptionsD2Ev")]
            internal static extern void dtor_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb20SBTypeSummaryOptions7IsValidEv")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool IsValid_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb20SBTypeSummaryOptions11GetLanguageEv")]
            internal static extern LLDB.LanguageType GetLanguage_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb20SBTypeSummaryOptions11SetLanguageENS_12LanguageTypeE")]
            internal static extern void SetLanguage_0(global::System.IntPtr instance, LLDB.LanguageType _0);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb20SBTypeSummaryOptions10GetCappingEv")]
            internal static extern LLDB.TypeSummaryCapping GetCapping_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb20SBTypeSummaryOptions10SetCappingENS_18TypeSummaryCappingE")]
            internal static extern void SetCapping_0(global::System.IntPtr instance, LLDB.TypeSummaryCapping _0);
        }

        public global::System.IntPtr __Instance { get; protected set; }

        protected int __PointerAdjustment;
        public static readonly System.Collections.Concurrent.ConcurrentDictionary<IntPtr, TypeSummaryOptions> NativeToManagedMap = new System.Collections.Concurrent.ConcurrentDictionary<IntPtr, TypeSummaryOptions>();
        protected void*[] __OriginalVTables;

        protected bool __ownsNativeInstance;

        public static TypeSummaryOptions __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
        {
            return new TypeSummaryOptions(native.ToPointer(), skipVTables);
        }

        public static TypeSummaryOptions __CreateInstance(TypeSummaryOptions.Internal native, bool skipVTables = false)
        {
            return new TypeSummaryOptions(native, skipVTables);
        }

        private static void* __CopyValue(TypeSummaryOptions.Internal native)
        {
            var ret = Marshal.AllocHGlobal(4);
            LLDB.TypeSummaryOptions.Internal.cctor_1(ret, new global::System.IntPtr(&native));
            return ret.ToPointer();
        }

        private TypeSummaryOptions(TypeSummaryOptions.Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TypeSummaryOptions(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new global::System.IntPtr(native);
        }

        public TypeSummaryOptions()
        {
            __Instance = Marshal.AllocHGlobal(4);
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            Internal.ctor_0((__Instance + __PointerAdjustment));
        }

        public TypeSummaryOptions(LLDB.TypeSummaryOptions rhs)
        {
            __Instance = Marshal.AllocHGlobal(4);
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            if (ReferenceEquals(rhs, null))
                throw new global::System.ArgumentNullException("rhs", "Cannot be null because it is a C++ reference (&).");
            var arg0 = rhs.__Instance;
            Internal.cctor_1((__Instance + __PointerAdjustment), arg0);
        }

        public void Dispose()
        {
            Dispose(disposing: true);
        }

        protected virtual void Dispose(bool disposing)
        {
            LLDB.TypeSummaryOptions __dummy;
            NativeToManagedMap.TryRemove(__Instance, out __dummy);
            Internal.dtor_0((__Instance + __PointerAdjustment));
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
        }

        public bool IsValid()
        {
            var __ret = Internal.IsValid_0((__Instance + __PointerAdjustment));
            return __ret;
        }

        public LLDB.LanguageType Language
        {
            get
            {
                var __ret = Internal.GetLanguage_0((__Instance + __PointerAdjustment));
                return __ret;
            }

            set
            {
                var arg0 = value;
                Internal.SetLanguage_0((__Instance + __PointerAdjustment), arg0);
            }
        }

        public LLDB.TypeSummaryCapping Capping
        {
            get
            {
                var __ret = Internal.GetCapping_0((__Instance + __PointerAdjustment));
                return __ret;
            }

            set
            {
                var arg0 = value;
                Internal.SetCapping_0((__Instance + __PointerAdjustment), arg0);
            }
        }
    }

    public unsafe partial class TypeSummary : IDisposable
    {
        [StructLayout(LayoutKind.Explicit, Size = 8)]
        public partial struct Internal
        {
            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb13SBTypeSummaryC2Ev")]
            internal static extern void ctor_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb13SBTypeSummaryC2ERKS0_")]
            internal static extern void cctor_1(global::System.IntPtr instance, global::System.IntPtr rhs);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb13SBTypeSummaryD2Ev")]
            internal static extern void dtor_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb13SBTypeSummary23CreateWithSummaryStringEPKcj")]
            internal static extern void CreateWithSummaryString_0(global::System.IntPtr @return, global::System.IntPtr data, uint options);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb13SBTypeSummary22CreateWithFunctionNameEPKcj")]
            internal static extern void CreateWithFunctionName_0(global::System.IntPtr @return, global::System.IntPtr data, uint options);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb13SBTypeSummary20CreateWithScriptCodeEPKcj")]
            internal static extern void CreateWithScriptCode_0(global::System.IntPtr @return, global::System.IntPtr data, uint options);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb13SBTypeSummary18CreateWithCallbackEPFbNS_7SBValueENS_20SBTypeSummaryOptionsERNS_8SBStreamEEjPKc")]
            internal static extern void CreateWithCallback_0(global::System.IntPtr @return, global::System.IntPtr cb, uint options, global::System.IntPtr description);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK4lldb13SBTypeSummary7IsValidEv")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool IsValid_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb13SBTypeSummary14IsFunctionCodeEv")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool IsFunctionCode_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb13SBTypeSummary14IsFunctionNameEv")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool IsFunctionName_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb13SBTypeSummary15IsSummaryStringEv")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool IsSummaryString_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb13SBTypeSummary14GetDescriptionERNS_8SBStreamENS_16DescriptionLevelE")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool GetDescription_0(global::System.IntPtr instance, global::System.IntPtr description, LLDB.DescriptionLevel description_level);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb13SBTypeSummary14DoesPrintValueENS_7SBValueE")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool DoesPrintValue_0(global::System.IntPtr instance, LLDB.Value.Internal value);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb13SBTypeSummary9IsEqualToERS0_")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool IsEqualTo_0(global::System.IntPtr instance, global::System.IntPtr rhs);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb13SBTypeSummaryeqERS0_")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorEqualEqual_0(global::System.IntPtr instance, global::System.IntPtr rhs);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb13SBTypeSummaryneERS0_")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorExclaimEqual_0(global::System.IntPtr instance, global::System.IntPtr rhs);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb13SBTypeSummary16CopyOnWrite_ImplEv")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool CopyOnWrite_Impl_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb13SBTypeSummary17ChangeSummaryTypeEb")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool ChangeSummaryType_0(global::System.IntPtr instance, bool want_script);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb13SBTypeSummary7GetDataEv")]
            internal static extern global::System.IntPtr GetData_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb13SBTypeSummary16SetSummaryStringEPKc")]
            internal static extern void SetSummaryString_0(global::System.IntPtr instance, global::System.IntPtr data);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb13SBTypeSummary15SetFunctionNameEPKc")]
            internal static extern void SetFunctionName_0(global::System.IntPtr instance, global::System.IntPtr data);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb13SBTypeSummary15SetFunctionCodeEPKc")]
            internal static extern void SetFunctionCode_0(global::System.IntPtr instance, global::System.IntPtr data);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb13SBTypeSummary10GetOptionsEv")]
            internal static extern uint GetOptions_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb13SBTypeSummary10SetOptionsEj")]
            internal static extern void SetOptions_0(global::System.IntPtr instance, uint _0);
        }

        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointerAttribute(global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
        public unsafe delegate bool FormatCallback(LLDB.Value.Internal _0, LLDB.TypeSummaryOptions.Internal _1, global::System.IntPtr _2);

        public global::System.IntPtr __Instance { get; protected set; }

        protected int __PointerAdjustment;
        public static readonly System.Collections.Concurrent.ConcurrentDictionary<IntPtr, TypeSummary> NativeToManagedMap = new System.Collections.Concurrent.ConcurrentDictionary<IntPtr, TypeSummary>();
        protected void*[] __OriginalVTables;

        protected bool __ownsNativeInstance;

        public static TypeSummary __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
        {
            return new TypeSummary(native.ToPointer(), skipVTables);
        }

        public static TypeSummary __CreateInstance(TypeSummary.Internal native, bool skipVTables = false)
        {
            return new TypeSummary(native, skipVTables);
        }

        private static void* __CopyValue(TypeSummary.Internal native)
        {
            var ret = Marshal.AllocHGlobal(8);
            LLDB.TypeSummary.Internal.cctor_1(ret, new global::System.IntPtr(&native));
            return ret.ToPointer();
        }

        private TypeSummary(TypeSummary.Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TypeSummary(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new global::System.IntPtr(native);
        }

        public TypeSummary()
        {
            __Instance = Marshal.AllocHGlobal(8);
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            Internal.ctor_0((__Instance + __PointerAdjustment));
        }

        public TypeSummary(LLDB.TypeSummary rhs)
        {
            __Instance = Marshal.AllocHGlobal(8);
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            if (ReferenceEquals(rhs, null))
                throw new global::System.ArgumentNullException("rhs", "Cannot be null because it is a C++ reference (&).");
            var arg0 = rhs.__Instance;
            Internal.cctor_1((__Instance + __PointerAdjustment), arg0);
        }

        public void Dispose()
        {
            Dispose(disposing: true);
        }

        protected virtual void Dispose(bool disposing)
        {
            LLDB.TypeSummary __dummy;
            NativeToManagedMap.TryRemove(__Instance, out __dummy);
            Internal.dtor_0((__Instance + __PointerAdjustment));
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
        }

        public bool IsValid()
        {
            var __ret = Internal.IsValid_0((__Instance + __PointerAdjustment));
            return __ret;
        }

        public bool IsFunctionCode()
        {
            var __ret = Internal.IsFunctionCode_0((__Instance + __PointerAdjustment));
            return __ret;
        }

        public bool IsFunctionName()
        {
            var __ret = Internal.IsFunctionName_0((__Instance + __PointerAdjustment));
            return __ret;
        }

        public bool IsSummaryString()
        {
            var __ret = Internal.IsSummaryString_0((__Instance + __PointerAdjustment));
            return __ret;
        }

        public bool GetDescription(LLDB.Stream description, LLDB.DescriptionLevel description_level)
        {
            if (ReferenceEquals(description, null))
                throw new global::System.ArgumentNullException("description", "Cannot be null because it is a C++ reference (&).");
            var arg0 = description.__Instance;
            var arg1 = description_level;
            var __ret = Internal.GetDescription_0((__Instance + __PointerAdjustment), arg0, arg1);
            return __ret;
        }

        public bool DoesPrintValue(LLDB.Value value)
        {
            var arg0 = ReferenceEquals(value, null) ? new LLDB.Value.Internal() : *(LLDB.Value.Internal*) (value.__Instance);
            var __ret = Internal.DoesPrintValue_0((__Instance + __PointerAdjustment), arg0);
            return __ret;
        }

        public bool IsEqualTo(LLDB.TypeSummary rhs)
        {
            if (ReferenceEquals(rhs, null))
                throw new global::System.ArgumentNullException("rhs", "Cannot be null because it is a C++ reference (&).");
            var arg0 = rhs.__Instance;
            var __ret = Internal.IsEqualTo_0((__Instance + __PointerAdjustment), arg0);
            return __ret;
        }

        public static bool operator ==(LLDB.TypeSummary __op, LLDB.TypeSummary rhs)
        {
            bool __opNull = ReferenceEquals(__op, null);
            bool rhsNull = ReferenceEquals(rhs, null);
            if (__opNull || rhsNull)
                return __opNull && rhsNull;
            var arg0 = __op.__Instance;
            var arg1 = rhs.__Instance;
            var __ret = Internal.OperatorEqualEqual_0(arg0, arg1);
            return __ret;
        }

        public override bool Equals(object obj)
        {
            return this == obj as TypeSummary;
        }

        public override int GetHashCode()
        {
            if (__Instance == global::System.IntPtr.Zero)
                return global::System.IntPtr.Zero.GetHashCode();
            return (*(Internal*) __Instance).GetHashCode();
        }

        public static bool operator !=(LLDB.TypeSummary __op, LLDB.TypeSummary rhs)
        {
            bool __opNull = ReferenceEquals(__op, null);
            bool rhsNull = ReferenceEquals(rhs, null);
            if (__opNull || rhsNull)
                return !(__opNull && rhsNull);
            var arg0 = __op.__Instance;
            var arg1 = rhs.__Instance;
            var __ret = Internal.OperatorExclaimEqual_0(arg0, arg1);
            return __ret;
        }

        protected bool CopyOnWrite_Impl()
        {
            var __ret = Internal.CopyOnWrite_Impl_0((__Instance + __PointerAdjustment));
            return __ret;
        }

        protected bool ChangeSummaryType(bool want_script)
        {
            var __ret = Internal.ChangeSummaryType_0((__Instance + __PointerAdjustment), want_script);
            return __ret;
        }

        public static LLDB.TypeSummary CreateWithSummaryString(string data, uint options)
        {
            var arg0 = Marshal.StringToHGlobalAnsi(data);
            var __ret = new LLDB.TypeSummary.Internal();
            Internal.CreateWithSummaryString_0(new IntPtr(&__ret), arg0, options);
            Marshal.FreeHGlobal(arg0);
            return LLDB.TypeSummary.__CreateInstance(__ret);
        }

        public static LLDB.TypeSummary CreateWithFunctionName(string data, uint options)
        {
            var arg0 = Marshal.StringToHGlobalAnsi(data);
            var __ret = new LLDB.TypeSummary.Internal();
            Internal.CreateWithFunctionName_0(new IntPtr(&__ret), arg0, options);
            Marshal.FreeHGlobal(arg0);
            return LLDB.TypeSummary.__CreateInstance(__ret);
        }

        public static LLDB.TypeSummary CreateWithScriptCode(string data, uint options)
        {
            var arg0 = Marshal.StringToHGlobalAnsi(data);
            var __ret = new LLDB.TypeSummary.Internal();
            Internal.CreateWithScriptCode_0(new IntPtr(&__ret), arg0, options);
            Marshal.FreeHGlobal(arg0);
            return LLDB.TypeSummary.__CreateInstance(__ret);
        }

        public static LLDB.TypeSummary CreateWithCallback(LLDB.TypeSummary.FormatCallback cb, uint options, string description)
        {
            var arg0 = cb == null ? global::System.IntPtr.Zero : Marshal.GetFunctionPointerForDelegate(cb);
            var arg2 = Marshal.StringToHGlobalAnsi(description);
            var __ret = new LLDB.TypeSummary.Internal();
            Internal.CreateWithCallback_0(new IntPtr(&__ret), arg0, options, arg2);
            Marshal.FreeHGlobal(arg2);
            return LLDB.TypeSummary.__CreateInstance(__ret);
        }

        public string Data
        {
            get
            {
                var __ret = Internal.GetData_0((__Instance + __PointerAdjustment));
                return Marshal.PtrToStringAnsi(__ret);
            }
        }

        public string SummaryString
        {
            set
            {
                var arg0 = Marshal.StringToHGlobalAnsi(value);
                Internal.SetSummaryString_0((__Instance + __PointerAdjustment), arg0);
                Marshal.FreeHGlobal(arg0);
            }
        }

        public string FunctionName
        {
            set
            {
                var arg0 = Marshal.StringToHGlobalAnsi(value);
                Internal.SetFunctionName_0((__Instance + __PointerAdjustment), arg0);
                Marshal.FreeHGlobal(arg0);
            }
        }

        public string FunctionCode
        {
            set
            {
                var arg0 = Marshal.StringToHGlobalAnsi(value);
                Internal.SetFunctionCode_0((__Instance + __PointerAdjustment), arg0);
                Marshal.FreeHGlobal(arg0);
            }
        }

        public uint Options
        {
            get
            {
                var __ret = Internal.GetOptions_0((__Instance + __PointerAdjustment));
                return __ret;
            }

            set
            {
                Internal.SetOptions_0((__Instance + __PointerAdjustment), value);
            }
        }
    }
}
