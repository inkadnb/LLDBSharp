//----------------------------------------------------------------------------
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
//----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;

namespace LLDB
{
    public unsafe partial class Data : IDisposable
    {
        [StructLayout(LayoutKind.Explicit, Size = 8)]
        public partial struct Internal
        {
            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb6SBDataC2Ev")]
            internal static extern void ctor_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb6SBDataC2ERKS0_")]
            internal static extern void cctor_1(global::System.IntPtr instance, global::System.IntPtr rhs);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb6SBDataD2Ev")]
            internal static extern void dtor_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb6SBData5ClearEv")]
            internal static extern void Clear_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb6SBData7IsValidEv")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool IsValid_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb6SBData8GetFloatERNS_7SBErrorEy")]
            internal static extern float GetFloat_0(global::System.IntPtr instance, global::System.IntPtr error, ulong offset);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb6SBData9GetDoubleERNS_7SBErrorEy")]
            internal static extern double GetDouble_0(global::System.IntPtr instance, global::System.IntPtr error, ulong offset);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb6SBData13GetLongDoubleERNS_7SBErrorEy")]
            internal static extern void* GetLongDouble_0(global::System.IntPtr instance, global::System.IntPtr error, ulong offset);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb6SBData10GetAddressERNS_7SBErrorEy")]
            internal static extern ulong GetAddress_0(global::System.IntPtr instance, global::System.IntPtr error, ulong offset);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb6SBData15GetUnsignedInt8ERNS_7SBErrorEy")]
            internal static extern byte GetUnsignedInt8_0(global::System.IntPtr instance, global::System.IntPtr error, ulong offset);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb6SBData16GetUnsignedInt16ERNS_7SBErrorEy")]
            internal static extern ushort GetUnsignedInt16_0(global::System.IntPtr instance, global::System.IntPtr error, ulong offset);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb6SBData16GetUnsignedInt32ERNS_7SBErrorEy")]
            internal static extern uint GetUnsignedInt32_0(global::System.IntPtr instance, global::System.IntPtr error, ulong offset);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb6SBData16GetUnsignedInt64ERNS_7SBErrorEy")]
            internal static extern ulong GetUnsignedInt64_0(global::System.IntPtr instance, global::System.IntPtr error, ulong offset);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb6SBData13GetSignedInt8ERNS_7SBErrorEy")]
            internal static extern sbyte GetSignedInt8_0(global::System.IntPtr instance, global::System.IntPtr error, ulong offset);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb6SBData14GetSignedInt16ERNS_7SBErrorEy")]
            internal static extern short GetSignedInt16_0(global::System.IntPtr instance, global::System.IntPtr error, ulong offset);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb6SBData14GetSignedInt32ERNS_7SBErrorEy")]
            internal static extern int GetSignedInt32_0(global::System.IntPtr instance, global::System.IntPtr error, ulong offset);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb6SBData14GetSignedInt64ERNS_7SBErrorEy")]
            internal static extern long GetSignedInt64_0(global::System.IntPtr instance, global::System.IntPtr error, ulong offset);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb6SBData9GetStringERNS_7SBErrorEy")]
            internal static extern global::System.IntPtr GetString_0(global::System.IntPtr instance, global::System.IntPtr error, ulong offset);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb6SBData11ReadRawDataERNS_7SBErrorEyPvm")]
            internal static extern uint ReadRawData_0(global::System.IntPtr instance, global::System.IntPtr error, ulong offset, global::System.IntPtr buf, uint size);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb6SBData14GetDescriptionERNS_8SBStreamEy")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool GetDescription_0(global::System.IntPtr instance, global::System.IntPtr description, ulong base_addr);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb6SBData7SetDataERNS_7SBErrorEPKvmNS_9ByteOrderEh")]
            internal static extern void SetData_0(global::System.IntPtr instance, global::System.IntPtr error, global::System.IntPtr buf, uint size, LLDB.ByteOrder endian, byte addr_size);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb6SBData6AppendERKS0_")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool Append_0(global::System.IntPtr instance, global::System.IntPtr rhs);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb6SBData21CreateDataFromCStringENS_9ByteOrderEjPKc")]
            internal static extern void CreateDataFromCString_0(global::System.IntPtr @return, LLDB.ByteOrder endian, uint addr_byte_size, global::System.IntPtr data);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb6SBData25CreateDataFromUInt64ArrayENS_9ByteOrderEjPym")]
            internal static extern void CreateDataFromUInt64Array_0(global::System.IntPtr @return, LLDB.ByteOrder endian, uint addr_byte_size, ulong* array, uint array_len);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb6SBData25CreateDataFromUInt32ArrayENS_9ByteOrderEjPjm")]
            internal static extern void CreateDataFromUInt32Array_0(global::System.IntPtr @return, LLDB.ByteOrder endian, uint addr_byte_size, uint* array, uint array_len);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb6SBData25CreateDataFromSInt64ArrayENS_9ByteOrderEjPxm")]
            internal static extern void CreateDataFromSInt64Array_0(global::System.IntPtr @return, LLDB.ByteOrder endian, uint addr_byte_size, long* array, uint array_len);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb6SBData25CreateDataFromSInt32ArrayENS_9ByteOrderEjPim")]
            internal static extern void CreateDataFromSInt32Array_0(global::System.IntPtr @return, LLDB.ByteOrder endian, uint addr_byte_size, int* array, uint array_len);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb6SBData25CreateDataFromDoubleArrayENS_9ByteOrderEjPdm")]
            internal static extern void CreateDataFromDoubleArray_0(global::System.IntPtr @return, LLDB.ByteOrder endian, uint addr_byte_size, double* array, uint array_len);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb6SBData18SetDataFromCStringEPKc")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool SetDataFromCString_0(global::System.IntPtr instance, global::System.IntPtr data);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb6SBData22SetDataFromUInt64ArrayEPym")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool SetDataFromUInt64Array_0(global::System.IntPtr instance, ulong* array, uint array_len);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb6SBData22SetDataFromUInt32ArrayEPjm")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool SetDataFromUInt32Array_0(global::System.IntPtr instance, uint* array, uint array_len);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb6SBData22SetDataFromSInt64ArrayEPxm")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool SetDataFromSInt64Array_0(global::System.IntPtr instance, long* array, uint array_len);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb6SBData22SetDataFromSInt32ArrayEPim")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool SetDataFromSInt32Array_0(global::System.IntPtr instance, int* array, uint array_len);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb6SBData22SetDataFromDoubleArrayEPdm")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool SetDataFromDoubleArray_0(global::System.IntPtr instance, double* array, uint array_len);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb6SBData18GetAddressByteSizeEv")]
            internal static extern byte GetAddressByteSize_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb6SBData18SetAddressByteSizeEh")]
            internal static extern void SetAddressByteSize_0(global::System.IntPtr instance, byte addr_byte_size);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb6SBData11GetByteSizeEv")]
            internal static extern uint GetByteSize_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb6SBData12GetByteOrderEv")]
            internal static extern LLDB.ByteOrder GetByteOrder_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb6SBData12SetByteOrderENS_9ByteOrderE")]
            internal static extern void SetByteOrder_0(global::System.IntPtr instance, LLDB.ByteOrder endian);
        }

        public global::System.IntPtr __Instance { get; protected set; }
        public static readonly System.Collections.Concurrent.ConcurrentDictionary<IntPtr, Data> NativeToManagedMap = new System.Collections.Concurrent.ConcurrentDictionary<IntPtr, Data>();

        private readonly bool __ownsNativeInstance;

        public static Data __CreateInstance(global::System.IntPtr native)
        {
            return new Data((Data.Internal*) native);
        }

        public static Data __CreateInstance(Data.Internal native)
        {
            return new Data(native);
        }

        private static Data.Internal* __CopyValue(Data.Internal native)
        {
            var ret = (Data.Internal*) Marshal.AllocHGlobal(8);
            *ret = native;
            return ret;
        }

        private Data(Data.Internal native)
            : this(__CopyValue(native))
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected Data(Data.Internal* native, bool isInternalImpl = false)
        {
            __Instance = new global::System.IntPtr(native);
        }

        public Data()
        {
            __Instance = Marshal.AllocHGlobal(8);
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            Internal.ctor_0(__Instance);
        }

        public void Dispose()
        {
            Dispose(disposing: true);
        }

        protected virtual void Dispose(bool disposing)
        {
            DestroyNativeInstance(false);
        }

        public virtual void DestroyNativeInstance()
        {
            DestroyNativeInstance(true);
        }

        private void DestroyNativeInstance(bool force)
        {
            LLDB.Data __dummy;
            NativeToManagedMap.TryRemove(__Instance, out __dummy);
            if (__ownsNativeInstance || force)
                Internal.dtor_0(__Instance);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
        }

        public void Clear()
        {
            Internal.Clear_0(__Instance);
        }

        public bool IsValid()
        {
            var __ret = Internal.IsValid_0(__Instance);
            return __ret;
        }

        public float GetFloat(LLDB.Error error, ulong offset)
        {
            var arg0 = ReferenceEquals(error, null) ? global::System.IntPtr.Zero : error.__Instance;
            var arg1 = offset;
            var __ret = Internal.GetFloat_0(__Instance, arg0, arg1);
            return __ret;
        }

        public double GetDouble(LLDB.Error error, ulong offset)
        {
            var arg0 = ReferenceEquals(error, null) ? global::System.IntPtr.Zero : error.__Instance;
            var arg1 = offset;
            var __ret = Internal.GetDouble_0(__Instance, arg0, arg1);
            return __ret;
        }

        public void* GetLongDouble(LLDB.Error error, ulong offset)
        {
            var arg0 = ReferenceEquals(error, null) ? global::System.IntPtr.Zero : error.__Instance;
            var arg1 = offset;
            var __ret = Internal.GetLongDouble_0(__Instance, arg0, arg1);
            return __ret;
        }

        public ulong GetAddress(LLDB.Error error, ulong offset)
        {
            var arg0 = ReferenceEquals(error, null) ? global::System.IntPtr.Zero : error.__Instance;
            var arg1 = offset;
            var __ret = Internal.GetAddress_0(__Instance, arg0, arg1);
            return __ret;
        }

        public byte GetUnsignedInt8(LLDB.Error error, ulong offset)
        {
            var arg0 = ReferenceEquals(error, null) ? global::System.IntPtr.Zero : error.__Instance;
            var arg1 = offset;
            var __ret = Internal.GetUnsignedInt8_0(__Instance, arg0, arg1);
            return __ret;
        }

        public ushort GetUnsignedInt16(LLDB.Error error, ulong offset)
        {
            var arg0 = ReferenceEquals(error, null) ? global::System.IntPtr.Zero : error.__Instance;
            var arg1 = offset;
            var __ret = Internal.GetUnsignedInt16_0(__Instance, arg0, arg1);
            return __ret;
        }

        public uint GetUnsignedInt32(LLDB.Error error, ulong offset)
        {
            var arg0 = ReferenceEquals(error, null) ? global::System.IntPtr.Zero : error.__Instance;
            var arg1 = offset;
            var __ret = Internal.GetUnsignedInt32_0(__Instance, arg0, arg1);
            return __ret;
        }

        public ulong GetUnsignedInt64(LLDB.Error error, ulong offset)
        {
            var arg0 = ReferenceEquals(error, null) ? global::System.IntPtr.Zero : error.__Instance;
            var arg1 = offset;
            var __ret = Internal.GetUnsignedInt64_0(__Instance, arg0, arg1);
            return __ret;
        }

        public sbyte GetSignedInt8(LLDB.Error error, ulong offset)
        {
            var arg0 = ReferenceEquals(error, null) ? global::System.IntPtr.Zero : error.__Instance;
            var arg1 = offset;
            var __ret = Internal.GetSignedInt8_0(__Instance, arg0, arg1);
            return __ret;
        }

        public short GetSignedInt16(LLDB.Error error, ulong offset)
        {
            var arg0 = ReferenceEquals(error, null) ? global::System.IntPtr.Zero : error.__Instance;
            var arg1 = offset;
            var __ret = Internal.GetSignedInt16_0(__Instance, arg0, arg1);
            return __ret;
        }

        public int GetSignedInt32(LLDB.Error error, ulong offset)
        {
            var arg0 = ReferenceEquals(error, null) ? global::System.IntPtr.Zero : error.__Instance;
            var arg1 = offset;
            var __ret = Internal.GetSignedInt32_0(__Instance, arg0, arg1);
            return __ret;
        }

        public long GetSignedInt64(LLDB.Error error, ulong offset)
        {
            var arg0 = ReferenceEquals(error, null) ? global::System.IntPtr.Zero : error.__Instance;
            var arg1 = offset;
            var __ret = Internal.GetSignedInt64_0(__Instance, arg0, arg1);
            return __ret;
        }

        public string GetString(LLDB.Error error, ulong offset)
        {
            var arg0 = ReferenceEquals(error, null) ? global::System.IntPtr.Zero : error.__Instance;
            var arg1 = offset;
            var __ret = Internal.GetString_0(__Instance, arg0, arg1);
            return Marshal.PtrToStringAnsi(__ret);
        }

        public uint ReadRawData(LLDB.Error error, ulong offset, global::System.IntPtr buf, uint size)
        {
            var arg0 = ReferenceEquals(error, null) ? global::System.IntPtr.Zero : error.__Instance;
            var arg1 = offset;
            var arg2 = buf;
            var arg3 = size;
            var __ret = Internal.ReadRawData_0(__Instance, arg0, arg1, arg2, arg3);
            return __ret;
        }

        public bool GetDescription(LLDB.Stream description, ulong base_addr)
        {
            var arg0 = ReferenceEquals(description, null) ? global::System.IntPtr.Zero : description.__Instance;
            var arg1 = base_addr;
            var __ret = Internal.GetDescription_0(__Instance, arg0, arg1);
            return __ret;
        }

        public void SetData(LLDB.Error error, global::System.IntPtr buf, uint size, LLDB.ByteOrder endian, byte addr_size)
        {
            var arg0 = ReferenceEquals(error, null) ? global::System.IntPtr.Zero : error.__Instance;
            var arg1 = buf;
            var arg2 = size;
            var arg3 = endian;
            var arg4 = addr_size;
            Internal.SetData_0(__Instance, arg0, arg1, arg2, arg3, arg4);
        }

        public bool Append(LLDB.Data rhs)
        {
            var arg0 = ReferenceEquals(rhs, null) ? global::System.IntPtr.Zero : rhs.__Instance;
            var __ret = Internal.Append_0(__Instance, arg0);
            return __ret;
        }

        public bool SetDataFromCString(string data)
        {
            var arg0 = Marshal.StringToHGlobalAnsi(data);
            var __ret = Internal.SetDataFromCString_0(__Instance, arg0);
            Marshal.FreeHGlobal(arg0);
            return __ret;
        }

        public bool SetDataFromUInt64Array(ulong* array, uint array_len)
        {
            var arg0 = array;
            var arg1 = array_len;
            var __ret = Internal.SetDataFromUInt64Array_0(__Instance, arg0, arg1);
            return __ret;
        }

        public bool SetDataFromUInt32Array(uint* array, uint array_len)
        {
            var arg0 = array;
            var arg1 = array_len;
            var __ret = Internal.SetDataFromUInt32Array_0(__Instance, arg0, arg1);
            return __ret;
        }

        public bool SetDataFromSInt64Array(long* array, uint array_len)
        {
            var arg0 = array;
            var arg1 = array_len;
            var __ret = Internal.SetDataFromSInt64Array_0(__Instance, arg0, arg1);
            return __ret;
        }

        public bool SetDataFromSInt32Array(int* array, uint array_len)
        {
            var arg0 = array;
            var arg1 = array_len;
            var __ret = Internal.SetDataFromSInt32Array_0(__Instance, arg0, arg1);
            return __ret;
        }

        public bool SetDataFromDoubleArray(double* array, uint array_len)
        {
            var arg0 = array;
            var arg1 = array_len;
            var __ret = Internal.SetDataFromDoubleArray_0(__Instance, arg0, arg1);
            return __ret;
        }

        public static LLDB.Data CreateDataFromCString(LLDB.ByteOrder endian, uint addr_byte_size, string data)
        {
            var arg0 = endian;
            var arg1 = addr_byte_size;
            var arg2 = Marshal.StringToHGlobalAnsi(data);
            var __ret = new LLDB.Data.Internal();
            Internal.CreateDataFromCString_0(new IntPtr(&__ret), arg0, arg1, arg2);
            Marshal.FreeHGlobal(arg2);
            return LLDB.Data.__CreateInstance(__ret);
        }

        public static LLDB.Data CreateDataFromUInt64Array(LLDB.ByteOrder endian, uint addr_byte_size, ulong* array, uint array_len)
        {
            var arg0 = endian;
            var arg1 = addr_byte_size;
            var arg2 = array;
            var arg3 = array_len;
            var __ret = new LLDB.Data.Internal();
            Internal.CreateDataFromUInt64Array_0(new IntPtr(&__ret), arg0, arg1, arg2, arg3);
            return LLDB.Data.__CreateInstance(__ret);
        }

        public static LLDB.Data CreateDataFromUInt32Array(LLDB.ByteOrder endian, uint addr_byte_size, uint* array, uint array_len)
        {
            var arg0 = endian;
            var arg1 = addr_byte_size;
            var arg2 = array;
            var arg3 = array_len;
            var __ret = new LLDB.Data.Internal();
            Internal.CreateDataFromUInt32Array_0(new IntPtr(&__ret), arg0, arg1, arg2, arg3);
            return LLDB.Data.__CreateInstance(__ret);
        }

        public static LLDB.Data CreateDataFromSInt64Array(LLDB.ByteOrder endian, uint addr_byte_size, long* array, uint array_len)
        {
            var arg0 = endian;
            var arg1 = addr_byte_size;
            var arg2 = array;
            var arg3 = array_len;
            var __ret = new LLDB.Data.Internal();
            Internal.CreateDataFromSInt64Array_0(new IntPtr(&__ret), arg0, arg1, arg2, arg3);
            return LLDB.Data.__CreateInstance(__ret);
        }

        public static LLDB.Data CreateDataFromSInt32Array(LLDB.ByteOrder endian, uint addr_byte_size, int* array, uint array_len)
        {
            var arg0 = endian;
            var arg1 = addr_byte_size;
            var arg2 = array;
            var arg3 = array_len;
            var __ret = new LLDB.Data.Internal();
            Internal.CreateDataFromSInt32Array_0(new IntPtr(&__ret), arg0, arg1, arg2, arg3);
            return LLDB.Data.__CreateInstance(__ret);
        }

        public static LLDB.Data CreateDataFromDoubleArray(LLDB.ByteOrder endian, uint addr_byte_size, double* array, uint array_len)
        {
            var arg0 = endian;
            var arg1 = addr_byte_size;
            var arg2 = array;
            var arg3 = array_len;
            var __ret = new LLDB.Data.Internal();
            Internal.CreateDataFromDoubleArray_0(new IntPtr(&__ret), arg0, arg1, arg2, arg3);
            return LLDB.Data.__CreateInstance(__ret);
        }

        public byte AddressByteSize
        {
            get
            {
                var __ret = Internal.GetAddressByteSize_0(__Instance);
                return __ret;
            }

            set
            {
                var arg0 = value;
                Internal.SetAddressByteSize_0(__Instance, arg0);
            }
        }

        public uint ByteSize
        {
            get
            {
                var __ret = Internal.GetByteSize_0(__Instance);
                return __ret;
            }
        }

        public LLDB.ByteOrder ByteOrder
        {
            get
            {
                var __ret = Internal.GetByteOrder_0(__Instance);
                return __ret;
            }

            set
            {
                var arg0 = value;
                Internal.SetByteOrder_0(__Instance, arg0);
            }
        }
    }
}
