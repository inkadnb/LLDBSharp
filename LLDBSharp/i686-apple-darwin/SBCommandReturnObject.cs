//----------------------------------------------------------------------------
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
//----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;

namespace LLDB
{
    public unsafe partial class CommandReturnObject : IDisposable
    {
        [StructLayout(LayoutKind.Explicit, Size = 4)]
        public partial struct Internal
        {
            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb21SBCommandReturnObjectC2Ev")]
            internal static extern void ctor_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb21SBCommandReturnObjectC2ERKS0_")]
            internal static extern void cctor_1(global::System.IntPtr instance, global::System.IntPtr rhs);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb21SBCommandReturnObjectD2Ev")]
            internal static extern void dtor_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK4lldb21SBCommandReturnObject7IsValidEv")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool IsValid_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb21SBCommandReturnObject5ClearEv")]
            internal static extern void Clear_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb21SBCommandReturnObject9SucceededEv")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool Succeeded_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb21SBCommandReturnObject9HasResultEv")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool HasResult_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb21SBCommandReturnObject13AppendMessageEPKc")]
            internal static extern void AppendMessage_0(global::System.IntPtr instance, global::System.IntPtr message);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb21SBCommandReturnObject13AppendWarningEPKc")]
            internal static extern void AppendWarning_0(global::System.IntPtr instance, global::System.IntPtr message);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb21SBCommandReturnObject14GetDescriptionERNS_8SBStreamE")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool GetDescription_0(global::System.IntPtr instance, global::System.IntPtr description);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb21SBCommandReturnObject10PutCStringEPKci")]
            internal static extern void PutCString_0(global::System.IntPtr instance, global::System.IntPtr @string, int len);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb21SBCommandReturnObject6PrintfEPKcz")]
            internal static extern uint Printf_0(global::System.IntPtr instance, global::System.IntPtr format);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb21SBCommandReturnObject9GetOutputEb")]
            internal static extern global::System.IntPtr GetOutput_1(global::System.IntPtr instance, bool only_if_no_immediate);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb21SBCommandReturnObject8GetErrorEb")]
            internal static extern global::System.IntPtr GetError_1(global::System.IntPtr instance, bool only_if_no_immediate);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb21SBCommandReturnObject8SetErrorERNS_7SBErrorEPKc")]
            internal static extern void SetError_0(global::System.IntPtr instance, global::System.IntPtr error, global::System.IntPtr fallback_error_cstr);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb21SBCommandReturnObject9GetOutputEv")]
            internal static extern global::System.IntPtr GetOutput_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb21SBCommandReturnObject8GetErrorEv")]
            internal static extern global::System.IntPtr GetError_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb21SBCommandReturnObject8SetErrorEPKc")]
            internal static extern void SetError_1(global::System.IntPtr instance, global::System.IntPtr error_cstr);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb21SBCommandReturnObject13GetOutputSizeEv")]
            internal static extern uint GetOutputSize_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb21SBCommandReturnObject12GetErrorSizeEv")]
            internal static extern uint GetErrorSize_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb21SBCommandReturnObject9GetStatusEv")]
            internal static extern LLDB.ReturnStatus GetStatus_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("lldb", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN4lldb21SBCommandReturnObject9SetStatusENS_12ReturnStatusE")]
            internal static extern void SetStatus_0(global::System.IntPtr instance, LLDB.ReturnStatus status);
        }

        public global::System.IntPtr __Instance { get; protected set; }
        public static readonly System.Collections.Concurrent.ConcurrentDictionary<IntPtr, CommandReturnObject> NativeToManagedMap = new System.Collections.Concurrent.ConcurrentDictionary<IntPtr, CommandReturnObject>();

        private readonly bool __ownsNativeInstance;

        public static CommandReturnObject __CreateInstance(global::System.IntPtr native)
        {
            return new CommandReturnObject((CommandReturnObject.Internal*) native);
        }

        public static CommandReturnObject __CreateInstance(CommandReturnObject.Internal native)
        {
            return new CommandReturnObject(native);
        }

        private static CommandReturnObject.Internal* __CopyValue(CommandReturnObject.Internal native)
        {
            var ret = (CommandReturnObject.Internal*) Marshal.AllocHGlobal(4);
            *ret = native;
            return ret;
        }

        private CommandReturnObject(CommandReturnObject.Internal native)
            : this(__CopyValue(native))
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected CommandReturnObject(CommandReturnObject.Internal* native, bool isInternalImpl = false)
        {
            __Instance = new global::System.IntPtr(native);
        }

        public CommandReturnObject()
        {
            __Instance = Marshal.AllocHGlobal(4);
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            Internal.ctor_0(__Instance);
        }

        public void Dispose()
        {
            Dispose(disposing: true);
        }

        protected virtual void Dispose(bool disposing)
        {
            DestroyNativeInstance(false);
        }

        public virtual void DestroyNativeInstance()
        {
            DestroyNativeInstance(true);
        }

        private void DestroyNativeInstance(bool force)
        {
            LLDB.CommandReturnObject __dummy;
            NativeToManagedMap.TryRemove(__Instance, out __dummy);
            if (__ownsNativeInstance || force)
                Internal.dtor_0(__Instance);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
        }

        public bool IsValid()
        {
            var __ret = Internal.IsValid_0(__Instance);
            return __ret;
        }

        public void Clear()
        {
            Internal.Clear_0(__Instance);
        }

        public bool Succeeded()
        {
            var __ret = Internal.Succeeded_0(__Instance);
            return __ret;
        }

        public bool HasResult()
        {
            var __ret = Internal.HasResult_0(__Instance);
            return __ret;
        }

        public void AppendMessage(string message)
        {
            var arg0 = Marshal.StringToHGlobalAnsi(message);
            Internal.AppendMessage_0(__Instance, arg0);
            Marshal.FreeHGlobal(arg0);
        }

        public void AppendWarning(string message)
        {
            var arg0 = Marshal.StringToHGlobalAnsi(message);
            Internal.AppendWarning_0(__Instance, arg0);
            Marshal.FreeHGlobal(arg0);
        }

        public bool GetDescription(LLDB.Stream description)
        {
            var arg0 = ReferenceEquals(description, null) ? global::System.IntPtr.Zero : description.__Instance;
            var __ret = Internal.GetDescription_0(__Instance, arg0);
            return __ret;
        }

        public void PutCString(string @string, int len)
        {
            var arg0 = Marshal.StringToHGlobalAnsi(@string);
            Internal.PutCString_0(__Instance, arg0, len);
            Marshal.FreeHGlobal(arg0);
        }

        public uint Printf(string format)
        {
            var arg0 = Marshal.StringToHGlobalAnsi(format);
            var __ret = Internal.Printf_0(__Instance, arg0);
            Marshal.FreeHGlobal(arg0);
            return __ret;
        }

        public string GetOutput(bool only_if_no_immediate)
        {
            var __ret = Internal.GetOutput_1(__Instance, only_if_no_immediate);
            return Marshal.PtrToStringAnsi(__ret);
        }

        public string GetError(bool only_if_no_immediate)
        {
            var __ret = Internal.GetError_1(__Instance, only_if_no_immediate);
            return Marshal.PtrToStringAnsi(__ret);
        }

        public void SetError(LLDB.Error error, string fallback_error_cstr)
        {
            var arg0 = ReferenceEquals(error, null) ? global::System.IntPtr.Zero : error.__Instance;
            var arg1 = Marshal.StringToHGlobalAnsi(fallback_error_cstr);
            Internal.SetError_0(__Instance, arg0, arg1);
            Marshal.FreeHGlobal(arg1);
        }

        public string Output
        {
            get
            {
                var __ret = Internal.GetOutput_0(__Instance);
                return Marshal.PtrToStringAnsi(__ret);
            }
        }

        public string Error
        {
            get
            {
                var __ret = Internal.GetError_0(__Instance);
                return Marshal.PtrToStringAnsi(__ret);
            }

            set
            {
                var arg0 = Marshal.StringToHGlobalAnsi(value);
                Internal.SetError_1(__Instance, arg0);
                Marshal.FreeHGlobal(arg0);
            }
        }

        public uint OutputSize
        {
            get
            {
                var __ret = Internal.GetOutputSize_0(__Instance);
                return __ret;
            }
        }

        public uint ErrorSize
        {
            get
            {
                var __ret = Internal.GetErrorSize_0(__Instance);
                return __ret;
            }
        }

        public LLDB.ReturnStatus Status
        {
            get
            {
                var __ret = Internal.GetStatus_0(__Instance);
                return __ret;
            }

            set
            {
                var arg0 = value;
                Internal.SetStatus_0(__Instance, arg0);
            }
        }
    }
}
